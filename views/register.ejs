<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Signup</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
      }

      .form-container {
        max-width: 400px;
        margin: 50px auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        opacity: 0;
        animation: fadeIn 1s forwards;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(-20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      h2 {
        text-align: center;
        color: #333;
      }

      form {
        display: flex;
        flex-direction: column;
      }

      .form-group {
        margin-bottom: 15px;
      }

      label {
        font-size: 16px;
        color: #555;
      }

      input {
        width: 100%;
        padding: 8px;
        margin-top: 5px;
        margin-bottom: 10px;
        box-sizing: border-box;
        border: 1px solid #ccc;
        border-radius: 4px;
      }

      button {
        background-color: #4caf50;
        color: #fff;
        padding: 10px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease-in-out,
          transform 0.3s ease-in-out;
        width: 100%;
      }

      button:hover {
        background-color: #45a049;
        transform: rotate(-3deg);
      }

      p {
        text-align: center;
        margin-top: 15px;
      }

      a {
        color: #007bff;
        text-decoration: none;
      }
    </style>
    <script
      src="https://kit.fontawesome.com/62f1e11ed3.js"
      crossorigin="anonymous"
    ></script>
  </head>
  <body>
    <div class="form-container">
      <h2>Register</h2>
      <form
        id="regform"
        action="/register"
        method="post"
        onsubmit="return validateForm()"
      >
        <div class="form-group">
          <div class="form-outline form-white mb-3">
            <label class="form-label" for="typeNameX">Name</label>
            <input
              type="text"
              id="typeNameX"
              class="form-control text-danger form-control-md"
              name="name"
              required
              onchange="validateName()"
            />
            <span id="nameError" class="error"></span>
          </div>
        </div>

        <div class="form-group">
          <div class="form-outline form-white mb-3">
            <label class="form-label" for="typeEmailX">Email</label>
            <input
              type="email"
              id="typeEmailX"
              class="form-control text-danger form-control-md"
              name="email"
              required
              onchange="validateEmail()"
              pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
            />
            <span id="emailError" class="error"></span>
          </div>
        </div>

        <div class="form-group">
          <div class="form-outline form-white mb-3">
            <label class="form-label" for="typeMobileX">Mobile</label>
            <input
              type="tel"
              maxlength="10"
              id="typeMobileX"
              class="form-control text-danger form-control-md"
              name="mob"
              required
              onchange="validateMobile()"
              pattern="[0-9]{10}"
            />
            <span id="mobileError" class="error"></span>
          </div>
        </div>

        <div class="form-group">
          <div class="form-outline form-white mb-3">
            <label class="form-label" for="typePasswordX">Password</label>
            <input
              type="password"
              id="typePasswordX"
              class="form-control text-danger form-control-md"
              name="password"
              required
              onchange="validatePassword()"
              pattern="^(?!\s).*$"
            />
            <span id="passwordError" class="error"></span>
          </div>
        </div>

        <div class="form-group">
          <div class="form-outline form-white mb-3">
            <label class="form-label" for="newPasswordX"
              >Confirm Password</label
            >
            <input
              type="password"
              id="newPasswordX"
              class="form-control text-danger form-control-md"
              name="confirmPassword"
              required
              onchange="validateConfirmPassword()"
              pattern="^(?!\s).*$"
            />
            <span id="confirmPasswordError" class="error"></span>
          </div>
        </div>

        <button type="submit" class="submit-btn">
          SignUp <i class="fa-solid fa-user-plus fa-shake"> </i>
        </button>
        <h3 class="text-center text-primary" id="registerErrorMessage">
          <%=locals.message ? message : ''%>
        </h3>
      </form>
    </div>
    <script>
      setInterval(() => {
        document.getElementById("registerErrorMessage").innerText = "";
      }, 3000);
    </script>
    <script>
      function validateForm() {
        // Reset error messages
        document.getElementById("nameError").textContent = "";
        document.getElementById("emailError").textContent = "";
        document.getElementById("mobileError").textContent = "";
        document.getElementById("passwordError").textContent = "";
        document.getElementById("confirmPasswordError").textContent = "";

        // Validate each field
        if (
          !validateName() ||
          !validateEmail() ||
          !validateMobile() ||
          !validatePassword() ||
          !validateConfirmPassword()
        ) {
          return false;
        }

        return true;
      }

      function validateName() {
        const name = document.getElementById("typeNameX").value;
        const nameError = document.getElementById("nameError");

        if (name.trim() === "") {
          nameError.textContent = "Name is required.";
          return false;
        }

        nameError.textContent = "";
        return true;
      }

      function validateEmail() {
        const email = document.getElementById("typeEmailX").value;
        const emailError = document.getElementById("emailError");

        if (email.trim() === "") {
          emailError.textContent = "Email is required.";
          return false;
        }

        // Add your email pattern validation here if needed

        emailError.textContent = "";
        return true;
      }

      function validateMobile() {
        const mobile = document.getElementById("typeMobileX").value;
        const mobileError = document.getElementById("mobileError");

        if (mobile.trim() === "") {
          mobileError.textContent = "Mobile is required.";
          return false;
        }

        // Add your mobile pattern validation here if needed

        mobileError.textContent = "";
        return true;
      }

      function validatePassword() {
        const password = document.getElementById("typePasswordX").value;
        const passwordError = document.getElementById("passwordError");

        if (password.trim() === "") {
          passwordError.textContent = "Password is required.";
          return false;
        }

        // Add your password pattern validation here if needed
        // Here, we'll also check for spaces in the password
        if (/\s/.test(password)) {
          passwordError.textContent = "Password should not contain spaces.";
          return false;
        }

        passwordError.textContent = "";
        return true;
      }

      function validateConfirmPassword() {
        const password = document.getElementById("typePasswordX").value;
        const confirmPassword = document.getElementById("newPasswordX").value;
        const confirmPasswordError = document.getElementById(
          "confirmPasswordError"
        );

        if (confirmPassword.trim() === "") {
          confirmPasswordError.textContent = "Confirm Password is required.";
          return false;
        }

        if (confirmPassword !== password) {
          confirmPasswordError.textContent = "Passwords do not match.";
          return false;
        }

        confirmPasswordError.textContent = "";
        return true;
      }
    </script>

    <script src="../public/js/registerscript.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
      integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
      integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
